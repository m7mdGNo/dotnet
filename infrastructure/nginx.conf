# server {
#     listen 8001;
#     server_name dotnet.skyrsys.com;

#     location / {
#         proxy_pass http://localhost:8001;  # Forward traffic to the Docker container on port 8001
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_redirect off;
#     }

#     # Redirect HTTP to HTTPS
#     listen [::]:8001 ipv6only=on;
#     return 301 https://$host$request_uri;
# }

server {
    server_name dotnet.skyrsys.com;

    client_max_body_size 100M;

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/dotnet.skyrsys.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/dotnet.skyrsys.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        include proxy_params;
        proxy_intercept_errors on;

        # Use the correct port (8443) for HTTPS
        proxy_pass https://localhost:8080;
    }
}

# server {
#     # listen 80;
#     server_name dotnet.skyrsys.com;

#     client_max_body_size 100M;

#     location / {
#         # Forward traffic to the Docker container exposed port
#         proxy_pass http://0.0.0.0:8002;  # This assumes port 8002 is exposed on the host
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_redirect off;
#     }
# }